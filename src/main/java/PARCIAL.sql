CREATE DATABASE PARCIAL;
USE PARCIAL;

CREATE TABLE STUDENTS(
	SID INTEGER NOT NULL,
    FIRSTN VARCHAR(250) NOT NULL,
    LASTN VARCHAR(250) NOT NULL,
    EMAIL VARCHAR(250),
    PRIMARY KEY(SID)
);

CREATE TABLE EXERCISES(
	CAT VARCHAR(50) NOT NULL,
    ENO INTEGER NOT NULL,
    TOPIC VARCHAR(250),
    MAXPT INTEGER NOT NULL,
    PRIMARY KEY(CAT,ENO)
);

CREATE TABLE RESULTS(
	SID INTEGER NOT NULL,
    CAT VARCHAR(50) NOT NULL,
    ENO INTEGER NOT NULL,
    POINTS  INTEGER NOT NULL,
    FOREIGN KEY(SID) REFERENCES STUDENTS(SID),
    FOREIGN KEY(CAT, ENO) REFERENCES EXERCISES(CAT,ENO),
    FOREIGN KEY(SID) REFERENCES STUDENTS(SID)
);

INSERT INTO STUDENTS VALUES(101,'Ann', 'Smith', '...');
INSERT INTO STUDENTS VALUES(102,'Michael', 'Jones', null);
INSERT INTO STUDENTS VALUES(103,'Richard', 'Turner', '...');
INSERT INTO STUDENTS VALUES(104,'Maria', 'Brown', '...');

select *from STUDENTS;

INSERT INTO EXERCISES VALUES('H', 1, 'Rel. Alg.', 10);
INSERT INTO EXERCISES VALUES('H', 2, 'SQL', 10);
INSERT INTO EXERCISES VALUES('M', 1, 'SQL', 14);

SELECT *FROM EXERCISES;

INSERT INTO RESULTS VALUES(101, 'H', 1, 10);
INSERT INTO RESULTS VALUES(101, 'H', 2, 8);
INSERT INTO RESULTS VALUES(101, 'M', 1, 12);
INSERT INTO RESULTS VALUES(102, 'H', 1, 9);
INSERT INTO RESULTS VALUES(102, 'H', 2, 9);
INSERT INTO RESULTS VALUES(102, 'M', 1, 10);
INSERT INTO RESULTS VALUES(103, 'H', 1, 5);
INSERT INTO RESULTS VALUES(103, 'M', 1, 7);

SELECT *FROM RESULTS;
-- Estudiantes que no han enviado ninguna tarea

-- Estudiante que tiene el máximo número de puntos para la tarea 1.

SELECT MAX(POINTS), FIRSTN, LASTN FROM STUDENTS INNER JOIN RESULTS ON (STUDENTS.SID=RESULTS.SID) where cat='H' AND ENO=1;

SELECT MAX(POINTS) AS MEJOR FROM RESULTS where cat='H' AND ENO=1;

-- Listar promedio de puntos obtenidos en las tareas
SELECT FIRSTN, LASTN,  AVG(POINTS) AS PROMEDIO FROM STUDENTS INNER JOIN RESULTS USING (SID); 
SELECT AVG(POINTS) AS PROMEDIO FROM RESULTS;

